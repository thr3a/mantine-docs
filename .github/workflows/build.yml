name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Checkout Mantine repository
        uses: actions/checkout@v3
        with:
          repository: mantinedev/mantine
          path: mantine

      - name: debug
        run: pwd && ls -l

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"
          cache: "yarn"
          cache-dependency-path: ${{ github.workspace }}/mantine/yarn.lock

      - name: Install dependencies
        working-directory: ${{ github.workspace }}/mantine
        run: yarn install --frozen-lockfile

      - name: Setup project
        working-directory: ${{ github.workspace }}/mantine
        run: npm run setup

      - name: Build all
        working-directory: ${{ github.workspace }}/mantine
        run: npm run build all

      - name: Remove unnecessary directories
        working-directory: ${{ github.workspace }}/mantine/apps/mantine.dev
        run: find ./src/pages -mindepth 1 -maxdepth 1 ! -name core -exec rm -rf {} +

      - name: Copy necessary files
        run: |
          cp ${{ github.workspace }}/convert.ts ${{ github.workspace }}/mantine/apps/mantine.dev/src/convert.ts
          cp ${{ github.workspace }}/hoge.ts ${{ github.workspace }}/mantine/apps/mantine.dev/src/pages/hoge.ts
          cp ${{ github.workspace }}/astro.config.mjs ${{ github.workspace }}/mantine/apps/mantine.dev/astro.config.mjs

      - name: Install additional dependencies
        working-directory: ${{ github.workspace }}/mantine/apps/mantine.dev
        run: yarn add astro @astrojs/check @astrojs/mdx remark-stringify @commenthol/turndown-cli

      - name: Execute convert.ts
        working-directory: ${{ github.workspace }}/mantine/apps/mantine.dev
        run: node --import tsx src/convert.ts

      - name: Build Astro
        working-directory: ${{ github.workspace }}/mantine/apps/mantine.dev
        run: npx astro build

      - name: Copy build output to dist
        run: cp -r ${{ github.workspace }}/mantine/apps/mantine.dev/out/* ${{ github.workspace }}/dist/

      - name: Commit and push changes
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add dist
          git commit -m "Update dist directory" || echo "No changes to commit"
          git push
